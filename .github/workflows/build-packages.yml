name: build-packages
on: [push, pull_request]
defaults:
  run:
    shell: bash
jobs:
  dtc-linux:
    runs-on: "ubuntu-16.04"
    env:
      PACKAGE: "dtc"
      OS_NAME: "linux"
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'true'
      - uses: antmicro/litex-conda-ci@move-to-ghactions
  dtc-osx:
    runs-on: "macos-latest"
    env:
      PACKAGE: "dtc"
      OS_NAME: "osx"
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'true'
      - uses: antmicro/litex-conda-ci@move-to-ghactions
  wishbone-tool-linux:
    runs-on: "ubuntu-16.04"
    env:
      PACKAGE: "wishbone-tool"
      OS_NAME: "linux"
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'true'
      - uses: antmicro/litex-conda-ci@move-to-ghactions
  wishbone-tool-osx:
    runs-on: "macos-latest"
    env:
      PACKAGE: "wishbone-tool"
      OS_NAME: "osx"
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'true'
      - uses: antmicro/litex-conda-ci@move-to-ghactions
  wishbone-tool-windows:
    runs-on: "windows-latest"
    env:
      PACKAGE: "wishbone-tool"
      OS_NAME: "windows"
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'true'
      - uses: antmicro/litex-conda-ci@move-to-ghactions
  sigrok-cli-linux:
    runs-on: "ubuntu-16.04"
    env:
      PACKAGE: "sigrok-cli"
      OS_NAME: "linux"
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'true'
      - uses: antmicro/litex-conda-ci@move-to-ghactions
  sigrok-cli-osx:
    runs-on: "macos-latest"
    env:
      PACKAGE: "sigrok-cli"
      OS_NAME: "osx"
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'true'
      - uses: antmicro/litex-conda-ci@move-to-ghactions
  renode-linux:
    runs-on: "ubuntu-16.04"
    env:
      PACKAGE: "renode"
      OS_NAME: "linux"
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'true'
      - uses: antmicro/litex-conda-ci@move-to-ghactions
  renode-osx:
    runs-on: "macos-latest"
    env:
      PACKAGE: "renode"
      OS_NAME: "osx"
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'true'
      - run: brew install coreutils
      - uses: antmicro/litex-conda-ci@move-to-ghactions
  renode-windows:
    runs-on: "windows-latest"
    env:
      PACKAGE: "renode"
      OS_NAME: "windows"
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'true'
      - uses: antmicro/litex-conda-ci@move-to-ghactions
  capnproto-linux:
    runs-on: "ubuntu-16.04"
    env:
      PACKAGE: "capnproto"
      OS_NAME: "linux"
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'true'
      - uses: antmicro/litex-conda-ci@move-to-ghactions
      - uses: actions/upload-artifact@v2
        with:
          name: capnproto-linux
          path: workdir/conda-env/conda-bld/linux-64/*.tar.bz2
  zachjs-sv2v-linux:
    runs-on: "ubuntu-16.04"
    env:
      PACKAGE: "zachjs-sv2v"
      OS_NAME: "linux"
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'true'
      - uses: antmicro/litex-conda-ci@move-to-ghactions
  capnproto-java-linux:
    runs-on: "ubuntu-16.04"
    needs: "capnproto-linux"
    env:
      PACKAGE: "capnproto-java"
      OS_NAME: "linux"
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'true'
      - uses: actions/download-artifact@v2
        with:
          name: capnproto-linux
          path: deps
      - name: 'build'
        run: |
          if [ $SKIP ]; then
            exit 0;
          fi
          export PATH="$PATH:/c/ProgramData/Chocolatey/bin/"
          export PATH="$PATH:/c/Program Files/Git/usr/bin/"
          source .github/scripts/common.sh
          bash .github/scripts/fixup-git.sh
          bash .github/scripts/download_sdk.sh
          source .github/scripts/common.sh
          bash .github/scripts/install.sh
          mkdir -p workdir/conda-env/conda-bld/linux-64/
          cp deps/* workdir/conda-env/conda-bld/linux-64/
          source .github/scripts/common.sh
          conda index workdir/conda-env/conda-bld
          bash .github/scripts/script.sh
          if [ $? -eq 0 ]; then
            source .github/scripts/after_success.sh
          else
            source .github/scripts/after_failure.sh
          fi
